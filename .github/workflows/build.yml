name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest  # Using macOS runner for iOS/iPad development
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # For git-secrets scanning
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.3.1'  # Latest stable version available on GitHub Actions
    
    - name: Install git-secrets
      run: |
        brew install git-secrets
        git secrets --install
        git secrets --register-aws
    
    - name: Security Scan
      run: git secrets --scan
    
    - name: Code Structure Check
      run: |
        echo "Checking project structure and Swift file validity..."

        # Check that we have Swift files
        swift_count=$(find Sources -name "*.swift" | wc -l)
        echo "Found $swift_count Swift source files"

        if [ "$swift_count" -eq 0 ]; then
          echo "Error: No Swift files found"
          exit 1
        fi

        # Check for basic syntax issues (missing braces, etc)
        for file in $(find Sources -name "*.swift"); do
          echo "Checking structure of $file"

          # Count braces to check for basic syntax
          open_braces=$(grep -o '{' "$file" | wc -l)
          close_braces=$(grep -o '}' "$file" | wc -l)

          if [ "$open_braces" -ne "$close_braces" ]; then
            echo "Warning: Mismatched braces in $file (open: $open_braces, close: $close_braces)"
          fi
        done

        echo "Code structure check completed successfully"

    - name: Build Verification
      run: |
        echo "Project structure verification:"
        echo "Swift files found: $(find Sources -name "*.swift" | wc -l)"
        echo "Test files found: $(find Tests -name "*.swift" | wc -l)"
        echo "Build verification completed"
    
    - name: Generate Project Report
      run: |
        echo "AudioMaster Project Report" > project-report.txt
        echo "Generated: $(date)" >> project-report.txt
        echo "Swift files: $(find Sources -name "*.swift" | wc -l)" >> project-report.txt
        echo "Test files: $(find Tests -name "*.swift" | wc -l)" >> project-report.txt
        echo "Lines of code: $(find Sources -name "*.swift" -exec wc -l {} \; | awk '{sum+=$1} END {print sum}')" >> project-report.txt

    - name: Upload Project Report
      uses: actions/upload-artifact@v4
      with:
        name: project-report
        path: project-report.txt
        retention-days: 14
        overwrite: true
